diff -Naur src/bigmpi_impl.h src-fix/bigmpi_impl.h
--- src/bigmpi_impl.h	2015-12-18 07:13:41.000000000 +0800
+++ src-fix/bigmpi_impl.h	2016-09-09 15:20:27.005176737 +0800
@@ -1,8 +1,6 @@
 #ifndef BIGMPI_IMPL_H
 #define BIGMPI_IMPL_H
 
-#include "bigmpiconf.h"
-
 #include <stdio.h>
 #include <stdlib.h>
 #include <stdarg.h>
diff -Naur src/fileio_x.c src-fix/fileio_x.c
--- src/fileio_x.c	2015-12-18 07:13:41.000000000 +0800
+++ src-fix/fileio_x.c	2016-09-09 15:20:27.005176737 +0800
@@ -195,37 +195,37 @@
     return rc;
 }
 
-int MPIX_File_iread_at_all_x(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
-{
-    int rc = MPI_SUCCESS;
-
-    if (likely (count <= bigmpi_int_max )) {
-        rc = MPI_File_iread_at_all(fh, offset, buf, (int)count, datatype, request);
-    } else {
-        MPI_Datatype newtype;
-        BigMPI_Type_contiguous(0,count, datatype, &newtype);
-        MPI_Type_commit(&newtype);
-        rc = MPI_File_iread_at_all(fh, offset, buf, 1, newtype, request);
-        MPI_Type_free(&newtype);
-    }
-    return rc;
-}
-
-int MPIX_File_iread_all_x(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
-{
-    int rc = MPI_SUCCESS;
-
-    if (likely (count <= bigmpi_int_max )) {
-        rc = MPI_File_iread_all(fh, buf, (int)count, datatype, request);
-    } else {
-        MPI_Datatype newtype;
-        BigMPI_Type_contiguous(0,count, datatype, &newtype);
-        MPI_Type_commit(&newtype);
-        rc = MPI_File_iread_all(fh, buf, 1, newtype, request);
-        MPI_Type_free(&newtype);
-    }
-    return rc;
-}
+//int MPIX_File_iread_at_all_x(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
+//{
+//    int rc = MPI_SUCCESS;
+//
+//    if (likely (count <= bigmpi_int_max )) {
+//        rc = MPI_File_iread_at_all(fh, offset, buf, (int)count, datatype, request);
+//    } else {
+//        MPI_Datatype newtype;
+//        BigMPI_Type_contiguous(0,count, datatype, &newtype);
+//        MPI_Type_commit(&newtype);
+//        rc = MPI_File_iread_at_all(fh, offset, buf, 1, newtype, request);
+//        MPI_Type_free(&newtype);
+//    }
+//    return rc;
+//}
+//
+//int MPIX_File_iread_all_x(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
+//{
+//    int rc = MPI_SUCCESS;
+//
+//    if (likely (count <= bigmpi_int_max )) {
+//        rc = MPI_File_iread_all(fh, buf, (int)count, datatype, request);
+//    } else {
+//        MPI_Datatype newtype;
+//        BigMPI_Type_contiguous(0,count, datatype, &newtype);
+//        MPI_Type_commit(&newtype);
+//        rc = MPI_File_iread_all(fh, buf, 1, newtype, request);
+//        MPI_Type_free(&newtype);
+//    }
+//    return rc;
+//}
 
 
 int MPIX_File_write_at_x(MPI_File fh, MPI_Offset offset, const void * buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status)
@@ -244,37 +244,37 @@
     return rc;
 }
 
-int MPIX_File_write_at_all_x(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status)
-{
-    int rc = MPI_SUCCESS;
-
-    if (likely (count <= bigmpi_int_max )) {
-        rc = MPI_File_write_at_all(fh, offset, buf, (int)count, datatype, status);
-    } else {
-        MPI_Datatype newtype;
-        BigMPI_Type_contiguous(0,count, datatype, &newtype);
-        MPI_Type_commit(&newtype);
-        rc = MPI_File_write_at_all(fh, offset, buf, 1, newtype, status);
-        MPI_Type_free(&newtype);
-    }
-    return rc;
-}
-
-int MPIX_File_write_at_all_begin_x(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype)
-{
-    int rc = MPI_SUCCESS;
-
-    if (likely (count <= bigmpi_int_max )) {
-        rc = MPI_File_write_at_all_begin(fh, offset, buf, (int)count, datatype);
-    } else {
-        MPI_Datatype newtype;
-        BigMPI_Type_contiguous(0,count, datatype, &newtype);
-        MPI_Type_commit(&newtype);
-        rc = MPI_File_write_at_all_begin(fh, offset, buf, 1, newtype);
-        MPI_Type_free(&newtype);
-    }
-    return rc;
-}
+//int MPIX_File_write_at_all_x(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status)
+//{
+//    int rc = MPI_SUCCESS;
+//
+//    if (likely (count <= bigmpi_int_max )) {
+//        rc = MPI_File_write_at_all(fh, offset, buf, (int)count, datatype, status);
+//    } else {
+//        MPI_Datatype newtype;
+//        BigMPI_Type_contiguous(0,count, datatype, &newtype);
+//        MPI_Type_commit(&newtype);
+//        rc = MPI_File_write_at_all(fh, offset, buf, 1, newtype, status);
+//        MPI_Type_free(&newtype);
+//    }
+//    return rc;
+//}
+//
+//int MPIX_File_write_at_all_begin_x(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype)
+//{
+//    int rc = MPI_SUCCESS;
+//
+//    if (likely (count <= bigmpi_int_max )) {
+//        rc = MPI_File_write_at_all_begin(fh, offset, buf, (int)count, datatype);
+//    } else {
+//        MPI_Datatype newtype;
+//        BigMPI_Type_contiguous(0,count, datatype, &newtype);
+//        MPI_Type_commit(&newtype);
+//        rc = MPI_File_write_at_all_begin(fh, offset, buf, 1, newtype);
+//        MPI_Type_free(&newtype);
+//    }
+//    return rc;
+//}
 
 int MPIX_File_write_x(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status)
 {
@@ -420,34 +420,34 @@
     return rc;
 }
 
-int MPIX_File_iwrite_at_all_x(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
-{
-    int rc = MPI_SUCCESS;
-
-    if (likely (count <= bigmpi_int_max )) {
-        rc = MPI_File_iwrite_at_all(fh, offset, buf, (int)count, datatype, request);
-    } else {
-        MPI_Datatype newtype;
-        BigMPI_Type_contiguous(0,count, datatype, &newtype);
-        MPI_Type_commit(&newtype);
-        rc = MPI_File_iwrite_at_all(fh, offset, buf, 1, newtype, request);
-        MPI_Type_free(&newtype);
-    }
-    return rc;
-}
-
-int MPIX_File_iwrite_all_x(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
-{
-    int rc = MPI_SUCCESS;
-
-    if (likely (count <= bigmpi_int_max )) {
-        rc = MPI_File_iwrite_all(fh, buf, (int)count, datatype, request);
-    } else {
-        MPI_Datatype newtype;
-        BigMPI_Type_contiguous(0,count, datatype, &newtype);
-        MPI_Type_commit(&newtype);
-        rc = MPI_File_iwrite_all(fh, buf, 1, newtype, request);
-        MPI_Type_free(&newtype);
-    }
-    return rc;
-}
+//int MPIX_File_iwrite_at_all_x(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
+//{
+//    int rc = MPI_SUCCESS;
+//
+//    if (likely (count <= bigmpi_int_max )) {
+//        rc = MPI_File_iwrite_at_all(fh, offset, buf, (int)count, datatype, request);
+//    } else {
+//        MPI_Datatype newtype;
+//        BigMPI_Type_contiguous(0,count, datatype, &newtype);
+//        MPI_Type_commit(&newtype);
+//        rc = MPI_File_iwrite_at_all(fh, offset, buf, 1, newtype, request);
+//        MPI_Type_free(&newtype);
+//    }
+//    return rc;
+//}
+//
+//int MPIX_File_iwrite_all_x(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request)
+//{
+//    int rc = MPI_SUCCESS;
+//
+//    if (likely (count <= bigmpi_int_max )) {
+//        rc = MPI_File_iwrite_all(fh, buf, (int)count, datatype, request);
+//    } else {
+//        MPI_Datatype newtype;
+//        BigMPI_Type_contiguous(0,count, datatype, &newtype);
+//        MPI_Type_commit(&newtype);
+//        rc = MPI_File_iwrite_all(fh, buf, 1, newtype, request);
+//        MPI_Type_free(&newtype);
+//    }
+//    return rc;
+//}
diff -Naur src/type_contiguous_x.c src-fix/type_contiguous_x.c
--- src/type_contiguous_x.c	2015-12-18 07:13:41.000000000 +0800
+++ src-fix/type_contiguous_x.c	2016-09-09 15:20:27.005176737 +0800
@@ -74,7 +74,9 @@
 int BigMPI_Type_contiguous(MPI_Aint offset, MPI_Count count, MPI_Datatype oldtype, MPI_Datatype * newtype)
 {
     /* The count has to fit into MPI_Aint for BigMPI to work. */
-    if ((uint64_t)count>(uint64_t)bigmpi_count_max) {
+	// BTM rewrite
+    //if ((uint64_t)count>(uint64_t)bigmpi_count_max) {
+    if ((unsigned long long)count>(unsigned long long)bigmpi_count_max) {
         printf("count (%llu) exceeds bigmpi_count_max (%llu)\n",
                 (long long unsigned)count, (long long unsigned)bigmpi_count_max);
         fflush(stdout);
diff -Naur src/type_hindexed_x.c src-fix/type_hindexed_x.c
--- src/type_hindexed_x.c	2015-12-18 07:13:41.000000000 +0800
+++ src-fix/type_hindexed_x.c	2016-09-09 15:20:27.005176737 +0800
@@ -40,7 +40,9 @@
     int *blocklens;
 
     /* The count has to fit into MPI_Aint for BigMPI to work. */
-    if ((uint64_t)count>(uint64_t)bigmpi_count_max) {
+	// BTM rewrite
+    //if ((uint64_t)count>(uint64_t)bigmpi_count_max) {
+    if ((unsigned long long)count>(unsigned long long)bigmpi_count_max) {
         printf("count (%lld) exceeds bigmpi_count_max (%lld)\n",
                 (long long unsigned)count, (long long unsigned)bigmpi_count_max);
         fflush(stdout);
diff -Naur src/utils.c src-fix/utils.c
--- src/utils.c	2015-12-18 07:13:41.000000000 +0800
+++ src-fix/utils.c	2016-09-09 15:20:27.005176737 +0800
@@ -152,10 +152,12 @@
         destinations[i] = (root == -1 || root==rank) ? i : root;
     }
 
-    int rc = MPI_Dist_graph_create_adjacent(comm_old,
-                indegree,  sources,      indegree==0  ? MPI_WEIGHTS_EMPTY : MPI_UNWEIGHTED,
-                outdegree, destinations, outdegree==0 ? MPI_WEIGHTS_EMPTY : MPI_UNWEIGHTED,
-                MPI_INFO_NULL, 0 /* reorder */, comm_dist_graph);
+//	BTM rewrite
+//    int rc = MPI_Dist_graph_create_adjacent(comm_old,
+//                indegree,  sources,      indegree==0  ? MPI_WEIGHTS_EMPTY : MPI_UNWEIGHTED,
+//                outdegree, destinations, outdegree==0 ? MPI_WEIGHTS_EMPTY : MPI_UNWEIGHTED,
+//                MPI_INFO_NULL, 0 /* reorder */, comm_dist_graph);
+	int rc = 0;
 
     free(sources);
     free(destinations);
